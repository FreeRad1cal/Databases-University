CREATE DATABASE IF NOT EXISTS auth_db;
CREATE USER 'auth_service'@'localhost' IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON auth_db . * TO 'auth_service'@'localhost';

CREATE DATABASE IF NOT EXISTS personnel_db;
CREATE USER 'personnel_service'@'localhost' IDENTIFIED BY '12345';
GRANT ALL PRIVILEGES ON personnel_db . * TO 'personnel_service'@'localhost';

USE auth_db;

CREATE TABLE IF NOT EXISTS Users (
	Id INT NOT NULL,
	PasswordHash VARCHAR(1024) NOT NULL,
	PasswordSalt VARCHAR(255) NOT NULL,
	UserName VARCHAR(255) NOT NULL,
	PRIMARY KEY (Id)
)

CREATE TABLE IF NOT EXISTS Claims (
	Type VARCHAR(255) NOT NULL,
	Value VARCHAR(255) NOT NULL,
	UserId INT NOT NULL,
	PRIMARY KEY (Type, Value, UserId),
	FOREIGN KEY (UserId)
		REFERENCES Users (Id)
		ON DELETE CASCADE
);

USE personnel_db;

CREATE TABLE IF NOT EXISTS People (
	Id INT NOT NULL AUTO_INCREMENT,
	UserName VARCHAR(255) NOT NULL,
	FirstName VARCHAR(255) NOT NULL,
	LastName VARCHAR(255) NOT NULL,
	Email VARCHAR(255) NOT NULL,
	PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS Addresses (
	Id INT NOT NULL AUTO_INCREMENT,
	Street VARCHAR(255) NOT NULL,
	City VARCHAR(255) NOT NULL,
	State VARCHAR(255) NOT NULL,
	Country VARCHAR(255) NOT NULL,
	ZipCode VARCHAR(255) NOT NULL,
	PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS PersonAddressMap (
	PersonId INT NOT NULL,
	AddressId INT NOT NULL,
	Type VARCHAR(255) NOT NULL,
	PRIMARY KEY (PersonId, AddressId),
	FOREIGN KEY (PersonId) 
		REFERENCES People(Id)
		ON DELETE CASCADE,
	FOREIGN KEY (AddressId) 
		REFERENCES Addresses(Id)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS JobTitles (
	Name VARCHAR(255) NOT NULL,
	PRIMARY KEY (Name)
);

CREATE TABLE IF NOT EXISTS Contracts (
	TitleName VARCHAR(255) NOT NULL,
	PersonId INT NOT NULL,
	HireDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (PersonId, TitleName),
	FOREIGN KEY (PersonId)
		REFERENCES People (Id)
		ON DELETE CASCADE,
	FOREIGN KEY (TitleName)
		REFERENCES JobTitles (Name)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Permissions (
	Name VARCHAR(255) NOT NULL,
	PRIMARY KEY (Name)
);

CREATE TABLE IF NOT EXISTS JobTitlePermissionMap (
	JobTitleName VARCHAR(255) NOT NULL,
	PermissionName VARCHAR(255) NOT NULL,
	FOREIGN KEY (JobTitleName)
		REFERENCES JobTitles (Name)
		ON DELETE CASCADE,
	FOREIGN KEY (PermissionName)
		REFERENCES Permissions (Name)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS JobPostings (
	Id INT NOT NULL AUTO_INCREMENT,
	JobTitleName VARCHAR(255) NOT NULL,
	Description VARCHAR(255) NOT NULL,
	PostedTime DATE NOT NULL,
	PRIMARY KEY (Id),
	FOREIGN KEY (JobTitleName)
		REFERENCES JobTitles (Name)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS JobApplications (
	Id INT NOT NULL AUTO_INCREMENT,
	JobPostingId INT NOT NULL,
	ApplicantId INT NOT NULL,
	Time DATE NOT NULL,
	ResumeFileName VARCHAR(255) NOT NULL,
	PRIMARY KEY (Id),
	FOREIGN KEY (JobPostingId)
		REFERENCES JobPostings (Id)
		ON DELETE CASCADE,
	FOREIGN KEY (ApplicantId)
		REFERENCES People (Id)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS JobApplicationDecision (
	JobApplicationId INT NOT NULL,
	Decision BOOLEAN NOT NULL,
	DeciderId INT,
	Time DATE NOT NULL,
	PRIMARY KEY (JobApplicationId),
	FOREIGN KEY (JobApplicationId)
		REFERENCES JobApplications (Id)
		ON DELETE CASCADE,
	FOREIGN KEY (DeciderId)
		REFERENCES People (Id)
		ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Semesters (
	Id INT NOT NULL AUTO_INCREMENT,
	StartDate DATE NOT NULL,
	EndDate DATE NOT NULL,
	RegistrationStartDate DATE NOT NULL,
	RegistrationEndDate DATE NOT NULL,
	ApplicationStartDate DATE NOT NULL,
	ApplicationEndDate DATE NOT NULL,
	Name VARCHAR(255) NOT NULL,
	PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS Applications (
	Id INT NOT NULL AUTO_INCREMENT,
	PersonId INT NOT NULL,
	SemesterId INT NOT NULL,
	Detail TEXT NOT NULL,
	IsDraft BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (Id),
	FOREIGN KEY (SemesterId)
		REFERENCES Semesters (Id)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ApplicationDecisions (
	ApplicationId INT NOT NULL,
	Decision BOOLEAN NOT NULL,
	DeciderId INT,
	PRIMARY KEY (ApplicationId),
	FOREIGN KEY (ApplicationId)
		REFERENCES Applications (Id)
		ON DELETE CASCADE,
	FOREIGN KEY (DeciderId)
		REFERENCES People (Id)
		ON DELETE SET NULL
);